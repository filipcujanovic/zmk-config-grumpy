#include "base_grumpy.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYMBOLS NAVIGATION>;
            then-layer = <NUMBERS>;
        };
    };
};
        //default_layer {
        //    bindings = <
        //                          &kp W &kp E &kp R  &kp T              &kp Y              &kp U &kp I &kp O
        //        &double_tap_key_a &kp S &kp D &kp F  &double_tap_key_g  &double_tap_key_h  &kp J &kp K &kp L   &double_tap_key_semi
        //        &kp Z             &kp X &kp C &kp V                     &kp M              &kp COMMA   &kp DOT &kp SLASH
        //                          &double_tap_key_enter                 &double_tap_key_space
        //    >;
        //};

/ {

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                      &kp W &kp E &kp R &kp G      &kp H &kp U  &kp I    &kp O
                &kp A &kp S &kp D &kp F &kp B      &kp N &kp J  &kp K    &kp L   &kp P
                &kp Z &kp X &kp C &kp V                  &kp M &kp COMMA &kp DOT &kp SLASH
                &my_lt SYMBOLS ENTER                               &my_lt NAVIGATION SPACE
            >;
        };

        symbol_layer {
            bindings = <
                          &kp LT    &kp GT   &kp UNDER &kp QMARK    &kp DQT   &kp TILDE &kp PIPE    &kp GRAVE
                &kp EXCL  &kp AT    &kp HASH &kp DLLR  &kp PRCNT    &kp CARET &kp AMPS &kp ASTERISK &kp LPAR  &kp RPAR
                &kp EQUAL &kp MINUS &kp PLUS &kp LBRC                         &kp LBKT &kp SQT      &kp COLON &kp BSLH
                                             &trans                           &trans
            >;
        };

        navigation_layer {
            bindings = <
                           &mo ADJUST &none    &none       &none           &kp C_PREVIOUS &kp C_VOLUME_DOWN    &kp C_VOLUME_UP      &kp C_NEXT
                &sk LCTRL  &sk LALT  &sk LGUI  &skq LSHIFT &kp TAB         &kp LEFT       &kp DOWN             &kp UP               &kp RIGHT         &kp LA(BSPC)
                &kp LG(Z)  &kp LG(X) &kp LG(C) &kp LG(V)                                  &kp C_BRIGHTNESS_DEC &kp C_BRIGHTNESS_INC &kp C_PLAY_PAUSE  &none
                                               &trans                                     &trans
            >;
        };

        numbers_layer {
            bindings = <
                       &kp F2 &kp F3         &kp F4         &kp F5        &kp F6  &kp F7  &kp F8  &kp F9
                &kp N1 &kp N2 &kp N3         &kp N4         &kp N5        &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
                &none  &none  &kp LG(LS(N4)) &kp LG(LS(N5))                       &none   &none   &none   &none
                                             &trans                               &trans

            >;
        };

        adjust_layer {
            bindings = <
                   &none  &none  &none   &bootloader       &none        &none        &none        &none
            &none  &none  &none  &none   &none             &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
            &none  &none  &none  &none                                  &bt BT_CLR   &none        &none        &none
                                 &trans                                 &trans
            >;
        };

    };
};
